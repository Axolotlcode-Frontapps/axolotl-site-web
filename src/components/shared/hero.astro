---
import type { ImageMetadata } from 'astro';

interface Props {
  title: string;
  description: string;
  image: ImageMetadata;
}

const { title, description, image } = Astro.props;
---

<section class="relative w-full h-full text-white">
  <div
    class="absolute inset-0 w-full h-full bg-cover bg-center bg-no-repeat"
    style={`background-image: url(${image?.src})`}
  >
  </div>

  <div class="absolute inset-0 w-full h-full bg-black/75"></div>

  <div
    class="hero opacity-0 relative max-w-5xl mx-auto w-full px-4 flex flex-col items-center text-center py-[186px] md:py-[135px] xl:py-[276px]"
  >
    <h1
      class="text-5xl md:text-[64px] font-bold leading-[58px] md:leading-[76px] mb-8"
      set:html={title}
    />
    <p class="text-base md:text-xl leading-7 font-normal md:font-light">
      {description}
    </p>
  </div>
</section>

<script>
  addEventListener('DOMContentLoaded', () => {
    const hero = document.querySelector('.hero');

    const observer = new IntersectionObserver(
      ([entry]) => {
        if (!entry) return;
        const isVisible = entry.isIntersecting;
        isVisible && hero ? hero.classList.add('fadeIn') : null;
      },
      { threshold: 0 }
    );
    hero ? observer.observe(hero) : null;
  });
</script>
