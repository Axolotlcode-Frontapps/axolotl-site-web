<svg
  class="wave-top absolute"
  width="100%"
  height="100%"
  viewBox="0 0 800 1200"
>
  <circle
    cx="600"
    cy="400"
    r="100"
    fill="#b1e7e8"
    filter="blur(15px)"
    class="bounce-circle bounce-circle-1"></circle>
  <circle
    cx="600"
    cy="400"
    r="100"
    fill="#ffa7b7"
    filter="blur(15px)"
    class="bounce-circle bounce-circle-2"></circle>
  <circle
    cx="600"
    cy="400"
    r="100"
    fill="#b1e7e8"
    filter="blur(15px)"
    class="bounce-circle bounce-circle-3"></circle>
  <circle
    cx="600"
    cy="400"
    r="100"
    fill="#ffa7b7"
    filter="blur(15px)"
    class="bounce-circle bounce-circle-4"></circle>
  <circle
    cx="600"
    cy="400"
    r="100"
    fill="#fbc3d2"
    filter="blur(15px)"
    class="bounce-circle bounce-circle-5"></circle>
</svg>

<style>
  .wave-top {
    position: absolute;
    inset: 0;
    width: 100%;
    z-index: -10;
  }

  .bounce-circle {
    transform-origin: center;
    will-change: transform;
  }
</style>

<script>
  function generateKeyframes(index: number) {
    const keyframes = `
      @keyframes bounce${index} {
        0% { transform: translate(0, 0) rotate(${Math.random() * 360}deg); }
        20% { transform: translate(${Math.random() * window.innerWidth}px, ${Math.random() * window.innerHeight}px) rotate(${Math.random() * 360}deg); }
        40% { transform: translate(${Math.random() * window.innerWidth}px, ${Math.random() * window.innerHeight}px) rotate(${Math.random() * 360}deg); }
        60% { transform: translate(${Math.random() * window.innerWidth}px, ${Math.random() * window.innerHeight}px) rotate(${Math.random() * 360}deg); }
        80% { transform: translate(${Math.random() * window.innerWidth}px, ${Math.random() * window.innerHeight}px) rotate(${Math.random() * 360}deg); }
        100% { transform: translate(0, 0) rotate(${Math.random() * 360}deg); }
      }
    `;
    return keyframes;
  }

  function createAnimationStyles() {
    const styleSheet = document.createElement('style');
    let styles = '';

    for (let i = 1; i <= 5; i++) {
      styles += generateKeyframes(i);
      styles += `
        .bounce-circle-${i} {
          animation: bounce${i} 15s ease-in-out infinite alternate;
        }
      `;
    }

    styleSheet.textContent = styles;
    document.head.appendChild(styleSheet);
  }

  document.addEventListener('DOMContentLoaded', createAnimationStyles);

  let resizeTimeout: number | undefined;
  window.addEventListener('resize', () => {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
      const oldStyles = document.querySelectorAll('style');
      oldStyles.forEach((style) => {
        if (style.textContent?.includes('bounce')) {
          style.remove();
        }
      });

      createAnimationStyles();
    }, 250);
  });
</script>
