---
import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
} from '@/libs/i18n/utils';

import Icon1 from '@/assets/icons/portfolio/icon-1.svg';
import Icon2 from '@/assets/icons/portfolio/icon-2.jpeg';
import Icon3 from '@/assets/icons/portfolio/icon-3.png';
import Icon4 from '@/assets/icons/portfolio/icon-4.png';

import Icon5 from '@/assets/icons/portfolio/icon-5.png';
import Icon6 from '@/assets/icons/portfolio/icon-6.webp';
import Icon7 from '@/assets/icons/portfolio/icon-7.jpeg';
import Icon8 from '@/assets/icons/portfolio/icon-8.jpeg';
import Icon9 from '@/assets/icons/portfolio/icon-9.jpeg';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const data = ['1', '2', '3', '4', '5', '6', '7', '8', '9'].map(
  (item, index) => ({
    position: `--position: ${item}`,
    icon: [
      Icon1.src,
      Icon2.src,
      Icon3.src,
      Icon4.src,
      Icon5.src,
      Icon6.src,
      Icon7.src,
      Icon8.src,
      Icon9.src,
    ][index],
    quantity: index + 1,
  })
);
---

<section class="section bg-foreground relative">
  <div
    class="max-w-7xl min-h-[70vh] mx-auto flex flex-col md:flex-row py-16 justify-between items-center gap-y-12 gap-x-7"
  >
    <article class="testimonial w-full flex flex-col gap-4">
      <span class="text-primary-500 leading-5 text-base lg:text-[24px]">
        {t('home.comments.span')}
      </span>
      <h2
        class="font-bold text-[28px] leading-8 lg:text-[40px] lg:leading-[48px]"
        set:html={t('home.comments.title')}
      />
      <p class="text-sm sm:text-base text-body-color max-w-2xl">
        {t('home.comments.description')}
      </p>
    </article>

    <article class="slider">
      <div class="track">
        {
          data.map(({ icon }) => (
            <a href={translatePath('/portfolio')} class="item">
              <img src={icon} alt="brandIcon" />
            </a>
          ))
        }
        {
          data.map(({ icon }) => (
            <a href={translatePath('/portfolio')} class="item">
              <img src={icon} alt="brandIcon" />
            </a>
          ))
        }
      </div>
    </article>
  </div>
</section>

<style>
  .slider {
    @apply w-full overflow-hidden relative bg-white rounded-[20px] shadow-lg;
    --item-width: 250px;
    --item-height: 200px;
  }

  .track {
    @apply flex;
    width: calc(var(--item-width) * 18); /* 9 Ã­tems x2 */
    animation: scrollTrack 20s linear infinite;
  }

  .item {
    @apply flex-shrink-0 px-5;
    width: var(--item-width);
    height: var(--item-height);
  }

  .item img {
    @apply w-full h-full object-contain cursor-pointer hover:scale-110 transition-all duration-200 ease-in-out;
  }

  @keyframes scrollTrack {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(
        calc(-1 * var(--item-width) * 9)
      ); /* Desplaza solo un grupo */
    }
  }

  .slider:hover .track {
    animation-play-state: paused;
  }
</style>

<script>
  addEventListener('DOMContentLoaded', () => {
    const testimonial = document.querySelector('.testimonial');
    const comment = document.querySelector('.comment');

    const observer = new IntersectionObserver(
      ([entry]) => {
        if (!entry) return;
        const isVisible = entry.isIntersecting;
        isVisible && testimonial
          ? testimonial.classList.add('fadeInFromTop')
          : null;
        isVisible && comment ? comment.classList.add('fadeInFromBottom') : null;
      },
      { threshold: 0 }
    );
    testimonial && observer.observe(testimonial);
    comment && observer.observe(comment);
  });
</script>
