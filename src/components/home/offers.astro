---
import Offer from './offer.astro';

import call from '@/assets/icons/call.svg';
import person from '@/assets/icons/person.svg';
import devs from '@/assets/icons/dev.svg';
import pencil from '@/assets/icons/pencil.svg';
import star from '@/assets/icons/start.svg';
import interrogatory from '@/assets/icons/interrogatory.svg';
import { getLangFromUrl, useTranslations } from '@/libs/i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const offers = [
  {
    icon: devs,
    title: t('home.offers.items.offer-1.title'),
    description: t('home.offers.items.offer-1.description'),
    alt: t('home.offers.items.offer-1.alt'),
  },
  {
    icon: pencil,
    title: t('home.offers.items.offer-2.title'),
    description: t('home.offers.items.offer-2.description'),
    alt: t('home.offers.items.offer-2.alt'),
  },
  {
    icon: person,
    title: t('home.offers.items.offer-3.title'),
    description: t('home.offers.items.offer-3.description'),
    alt: t('home.offers.items.offer-3.alt'),
  },
  {
    icon: star,
    title: t('home.offers.items.offer-4.title'),
    description: t('home.offers.items.offer-4.description'),
    alt: t('home.offers.items.offer-4.alt'),
  },
  {
    icon: call,
    title: t('home.offers.items.offer-5.title'),
    description: t('home.offers.items.offer-5.description'),
    alt: t('home.offers.items.offer-5.alt'),
  },
  {
    icon: interrogatory,
    title: t('home.offers.items.offer-6.title'),
    description: t('home.offers.items.offer-6.description'),
    alt: t('home.offers.items.offer-6.alt'),
  },
];
---

<section>
  <div class="max-w-7xl mx-auto px-10 py-20">
    <div class="text-center mb-20 offer-info">
      <span class="text-primary-500 leading-5 text-base lg:text-[24px]"
        >{t('home.offers.span')}</span
      >
      <h2
        class="font-bold text-[28px] leading-8 lg:text-[40px] lg:leading-[48px]"
        set:html={t('home.offers.title')}
      />
    </div>
    <div class="items grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        offers.map((offer) => (
          <Offer
            icon={offer.icon}
            title={offer.title}
            description={offer.description}
            alt={offer.alt}
          />
        ))
      }
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/dist/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  const offerInfo = document.querySelector('.offer-info');
  const offerItems = document.querySelectorAll('.items > *');

  gsap.set(offerInfo, {
    opacity: 0,
    y: -50,
  });

  gsap.set(offerItems, {
    opacity: 0,
  });

  ScrollTrigger.create({
    trigger: offerInfo,
    start: 'top 80%',
    toggleActions: 'play none none reverse',
    onEnter: () => {
      gsap.to(offerInfo, {
        opacity: 1,
        y: 0,
        duration: 1,
        ease: 'power4.inOut',
      });
    },
    onLeaveBack: () => {
      gsap.to(offerInfo, {
        opacity: 0,
        y: -50,
        duration: 0.5,
        ease: 'power4.inOut',
      });
    },
  });

  ScrollTrigger.create({
    trigger: offerItems,
    start: 'top 80%',
    end: 'bottom 20%',
    toggleActions: 'play none none reverse',
    onEnter: () => {
      gsap.to(offerItems, {
        opacity: 1,
        duration: 2.1,
        stagger: 0.35,
        ease: 'power4.inOut',
      });
    },
    onLeaveBack: () => {
      gsap.to(offerItems, {
        opacity: 0,
        duration: 1,
        ease: 'power4.inOut',
      });
    },
  });
</script>
